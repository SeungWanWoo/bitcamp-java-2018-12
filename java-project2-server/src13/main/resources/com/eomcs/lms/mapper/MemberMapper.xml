<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberMapper">
  <resultMap type="member" id="memberMap">
    <result column="member_id" property="no"/>
    <result column="pwd" property="password"/>
    <result column="cdt" property="registeredDate"/>
    <result column="tel" property="tel"/>
  </resultMap>

  <select id="findAll" resultMap="memberMap">
    select
      member_id,
      name,
      email,
      pwd,
      cdt,
      tel,
      photo
      from 
        lms_member
      order by
        member_id desc
  </select>
  
  <select id="findByKeyword" resultMap="memberMap" parameterType="string">
    select
      member_id,
      name,
      email,
      pwd,
      cdt,
      tel,
      photo
    from lms_member
      <trim prefix="where" prefixOverrides="OR |AND">
        <if test="value != null"> name like concat('%', #{value}, '%')</if>
        <if test="value != null"> or email like concat('%', #{value}, '%')</if>
        <if test="value != null"> or tel like concat('%', #{value}, '%')</if>
      </trim>
    order by member_id desc
  </select>
  
  <select id="findByNo" resultMap="memberMap" parameterType="int">
    select
      member_id,
      name,
      email,
      pwd,
      cdt,
      tel,
      photo
    from lms_member
    where
      member_id = #{value}
  </select>
  
  <insert id="insert" parameterType="member">
    insert into lms_member (name, email, pwd, tel, photo)
    values (#{name}, #{email}, #{password}, #{tel}, #{photo})
  </insert>
  
  
  <update id="update" parameterType="member">
    update lms_member
    set
      name = #{name},
      email = #{email},
      pwd = password(#{password}),
      cdt = now(),
      tel = #{tel},
      photo = #{photo}
      where
        member_id = #{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from lms_member where member_id = #{no}
  </delete>
</mapper>